You are working on the frontend of AutoForwardX built with React (Vite + Tailwind).

The backend already supports message editing options via:

PATCH /api/forwarding/pairs/:id/message-edit

It allows:
- Adding a custom header
- Adding a custom footer
- Removing the original header
- Removing the original footer

Your task is to implement a new **Message Editor UI** in the dashboard.

---

## ✅ 1. Add “Edit Message” Button

In each `PairCard.tsx`, add a new icon/button:

```tsx
<Button
  variant="outline"
  size="sm"
  onClick={() => openEditModal(pair)}
  className="text-indigo-500 border-indigo-500 hover:bg-indigo-500 hover:text-white rounded-md"
>
  ✏️ Edit Message
</Button>
This opens a modal to configure the message formatting.

✅ 2. Create Modal Component: MessageEditModal.tsx
Inside src/components/MessageEditModal.tsx:

tsx
Copy
Edit
<Dialog open={isOpen} onOpenChange={setIsOpen}>
  <DialogContent className="bg-gray-900 rounded-xl">
    <DialogHeader>
      <DialogTitle>Edit Message Format</DialogTitle>
    </DialogHeader>

    <div className="space-y-4">
      <Input
        label="Custom Header"
        value={header}
        onChange={(e) => setHeader(e.target.value)}
        placeholder="e.g. 🚨 Signal Alert"
      />
      <Input
        label="Custom Footer"
        value={footer}
        onChange={(e) => setFooter(e.target.value)}
        placeholder="e.g. ⚠️ From FX Leaks"
      />
      <Switch
        checked={removeHeader}
        onCheckedChange={setRemoveHeader}
        label="Remove Original Header"
      />
      <Switch
        checked={removeFooter}
        onCheckedChange={setRemoveFooter}
        label="Remove Original Footer"
      />
    </div>

    <DialogFooter>
      <Button onClick={handleSave} className="bg-indigo-600 hover:bg-indigo-700 text-white">
        Save Changes
      </Button>
    </DialogFooter>
  </DialogContent>
</Dialog>
✅ 3. Handle Save Logic
Call:

tsx
Copy
Edit
await axios.patch(`/api/forwarding/pairs/${pair.id}/message-edit`, {
  custom_header: header,
  custom_footer: footer,
  remove_header: removeHeader,
  remove_footer: removeFooter
});
On success: toast ✅ and close modal.

🔐 4. Restrict by Plan (Pro or Elite)
tsx
Copy
Edit
if (user.plan === "free") {
  return (
    <Tooltip content="Upgrade to Pro or Elite">
      <Button disabled>✏️ Edit Message</Button>
    </Tooltip>
  )
}
📌 Result
Each forwarding pair should now have an ✏️ Edit Message button, which opens a modal allowing users to:

Add/remove custom header/footer

Save it to backend

Immediately reflect in forwarding logic

Only users with Pro or Elite plan can see and use it.